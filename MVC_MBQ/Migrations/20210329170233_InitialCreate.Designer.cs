// <auto-generated />
using System;
using MVC_MBQ.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_MBQ.Migrations
{
    [DbContext(typeof(AppMovimentoBQDbContext))]
    [Migration("20210329170233_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVC_MBQ.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NomeCategoria = "Lacticinios"
                        },
                        new
                        {
                            ID = 2,
                            NomeCategoria = "Produtos de Limpeza"
                        },
                        new
                        {
                            ID = 3,
                            NomeCategoria = "Conservas"
                        },
                        new
                        {
                            ID = 4,
                            NomeCategoria = "Alimentos"
                        },
                        new
                        {
                            ID = 5,
                            NomeCategoria = "Outros"
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.Doacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDoacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventoID")
                        .HasColumnType("int");

                    b.Property<int>("VoluntarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventoID");

                    b.HasIndex("VoluntarioID");

                    b.ToTable("Doacoes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataDoacao = new DateTime(2021, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventoID = 5,
                            VoluntarioID = 1
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.EntregaFamilia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("FamiliaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FamiliaID");

                    b.ToTable("EntregaFamilias");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataEntrega = new DateTime(2021, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FamiliaID = 10
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.Evento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Telemovel")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataEvento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Primeira Campanha Bebe Quentinho para angariar alimentos e outros",
                            Email = "quentinhopapi@gmail.com",
                            NomeEvento = "1º Campanha Bebe Quentinho",
                            Telemovel = 916505505
                        },
                        new
                        {
                            ID = 2,
                            DataEvento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Segunda Campanha Bebe Quentinho para angariar alimentos e outros",
                            Email = "quentinhopapi@gmail.com",
                            NomeEvento = "2º Campanha Bebe Quentinho",
                            Telemovel = 916505505
                        },
                        new
                        {
                            ID = 3,
                            DataEvento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Terceira Campanha Bebe Quentinho para angariar alimentos e outros",
                            Email = "quentinhopapi@gmail.com",
                            NomeEvento = "3º Campanha Bebe Quentinho",
                            Telemovel = 916505505
                        },
                        new
                        {
                            ID = 4,
                            DataEvento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Quarta Campanha Bebe Quentinho para angariar alimentos e outros",
                            Email = "quentinhopapi@gmail.com",
                            NomeEvento = "4º Campanha Bebe Quentinho",
                            Telemovel = 916505505
                        },
                        new
                        {
                            ID = 5,
                            DataEvento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Angariação continua de alimentos, apenas é necessario agendar entrega",
                            Email = "quentinhopapi@gmail.com",
                            NomeEvento = "Qualquer Hora, Qualquer Dia",
                            Telemovel = 916505505
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.Familia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Familias");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Nome = "Familia Domingues"
                        },
                        new
                        {
                            ID = 2,
                            Nome = "Familia Silva"
                        },
                        new
                        {
                            ID = 3,
                            Nome = "Familia Antunes"
                        },
                        new
                        {
                            ID = 4,
                            Nome = "Familia Salgueiro"
                        },
                        new
                        {
                            ID = 5,
                            Nome = "Familia Costa"
                        },
                        new
                        {
                            ID = 6,
                            Nome = "Familia Jardim"
                        },
                        new
                        {
                            ID = 7,
                            Nome = "Familia Alves"
                        },
                        new
                        {
                            ID = 8,
                            Nome = "Familia Ferreira"
                        },
                        new
                        {
                            ID = 9,
                            Nome = "Familia Rodrigues"
                        },
                        new
                        {
                            ID = 10,
                            Nome = "Familia Teste"
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.Inscricao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInscrição")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("EventoID")
                        .HasColumnType("int");

                    b.Property<int>("VoluntarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventoID");

                    b.HasIndex("VoluntarioID");

                    b.ToTable("Inscricoes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataInscrição = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventoID = 5,
                            VoluntarioID = 4
                        },
                        new
                        {
                            ID = 2,
                            DataInscrição = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventoID = 5,
                            VoluntarioID = 1
                        },
                        new
                        {
                            ID = 3,
                            DataInscrição = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventoID = 5,
                            VoluntarioID = 3
                        },
                        new
                        {
                            ID = 4,
                            DataInscrição = new DateTime(2021, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventoID = 5,
                            VoluntarioID = 2
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.MembroFamilia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamiliaID")
                        .HasColumnType("int");

                    b.Property<string>("GrauParentesco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Postal")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FamiliaID");

                    b.ToTable("MembroFamilias");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            DataNascimento = new DateTime(1982, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "analmjdomingues@yahoo.fr",
                            FamiliaID = 1,
                            GrauParentesco = "Mãe",
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "Ana Domingues",
                            Postal = 550
                        },
                        new
                        {
                            ID = 2,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            DataNascimento = new DateTime(1975, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "domingues_david@yahoo.fr",
                            FamiliaID = 1,
                            GrauParentesco = "Pai",
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "David Domingues",
                            Postal = 550
                        },
                        new
                        {
                            ID = 3,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            DataNascimento = new DateTime(2004, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "mariana.j.domingues@gmail.com",
                            FamiliaID = 1,
                            GrauParentesco = "Filha",
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "Mariana Domingues",
                            Postal = 550
                        },
                        new
                        {
                            ID = 4,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            DataNascimento = new DateTime(2008, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "domingues.s.david@gmail.com",
                            FamiliaID = 1,
                            GrauParentesco = "Filho",
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "David Jesus Domingues",
                            Postal = 550
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.Newsletter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsentimentoRGPD")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Newsletters");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoriaID = 1,
                            NomeProduto = "Leite",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoriaID = 4,
                            NomeProduto = "Papas",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoriaID = 4,
                            NomeProduto = "Bolachas",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 4,
                            CategoriaID = 5,
                            NomeProduto = "Fraldas",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 5,
                            CategoriaID = 5,
                            NomeProduto = "Toalhetes",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 6,
                            CategoriaID = 1,
                            NomeProduto = "Leite em pó",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 7,
                            CategoriaID = 1,
                            NomeProduto = "Farinhas Lacteas",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 8,
                            CategoriaID = 3,
                            NomeProduto = "Atum",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 9,
                            CategoriaID = 3,
                            NomeProduto = "Salsichas",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 10,
                            CategoriaID = 4,
                            NomeProduto = "Arroz",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 11,
                            CategoriaID = 4,
                            NomeProduto = "Massa",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 12,
                            CategoriaID = 3,
                            NomeProduto = "Feijao",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 13,
                            CategoriaID = 4,
                            NomeProduto = "Azeite",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 14,
                            CategoriaID = 4,
                            NomeProduto = "Oleo",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 15,
                            CategoriaID = 5,
                            NomeProduto = "Biberao",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 16,
                            CategoriaID = 5,
                            NomeProduto = "Chuchas",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 17,
                            CategoriaID = 5,
                            NomeProduto = "Roupa",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 18,
                            CategoriaID = 5,
                            NomeProduto = "Sapatos",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 19,
                            CategoriaID = 5,
                            NomeProduto = "Brinquedos",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 20,
                            CategoriaID = 4,
                            NomeProduto = "Cereais",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 21,
                            CategoriaID = 2,
                            NomeProduto = "Champo",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 22,
                            CategoriaID = 2,
                            NomeProduto = "Gel de duche",
                            QuantidadeMinima = 0
                        },
                        new
                        {
                            ID = 23,
                            CategoriaID = 4,
                            NomeProduto = "Creme",
                            QuantidadeMinima = 0
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.ProdutoDoado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoacaoID")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DoacaoID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("ProdutosDoados");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DoacaoID = 1,
                            ProdutoID = 1,
                            Quantidade = 3
                        },
                        new
                        {
                            ID = 2,
                            DoacaoID = 1,
                            ProdutoID = 20,
                            Quantidade = 5
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.ProdutoEntregue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntregaFamiliaID")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EntregaFamiliaID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("ProdutosEntregues");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EntregaFamiliaID = 1,
                            ProdutoID = 1,
                            Quantidade = 3
                        },
                        new
                        {
                            ID = 2,
                            EntregaFamiliaID = 1,
                            ProdutoID = 20,
                            Quantidade = 5
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.Voluntario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int");

                    b.Property<bool>("ConsentimentoRGPD")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Interno")
                        .HasColumnType("bit");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Postal")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Voluntarios");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            ConsentimentoRGPD = true,
                            DataNascimento = new DateTime(1982, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "analmjdomingues@yahoo.fr",
                            Interno = true,
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "Ana Domingues",
                            Postal = 550
                        },
                        new
                        {
                            ID = 2,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            ConsentimentoRGPD = true,
                            DataNascimento = new DateTime(1975, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "domingues_david@yahoo.fr",
                            Interno = true,
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "David Domingues",
                            Postal = 550
                        },
                        new
                        {
                            ID = 3,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            ConsentimentoRGPD = true,
                            DataNascimento = new DateTime(2004, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "mariana.j.domingues@gmail.com",
                            Interno = true,
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "Mariana Domingues",
                            Postal = 550
                        },
                        new
                        {
                            ID = 4,
                            Cidade = "Setúbal",
                            Codigo = 2900,
                            ConsentimentoRGPD = true,
                            DataNascimento = new DateTime(2008, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distrito = "Setúbal",
                            Email = "domingues.s.david@gmail.com",
                            Interno = true,
                            Morada = "Rua Major Perestrelo da Conceição",
                            Nome = "David Jesus Domingues",
                            Postal = 550
                        });
                });

            modelBuilder.Entity("MVC_MBQ.Models.Doacao", b =>
                {
                    b.HasOne("MVC_MBQ.Models.Evento", "Evento")
                        .WithMany("Doacoes")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_MBQ.Models.Voluntario", "Voluntario")
                        .WithMany("Doacoes")
                        .HasForeignKey("VoluntarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("MVC_MBQ.Models.EntregaFamilia", b =>
                {
                    b.HasOne("MVC_MBQ.Models.Familia", "Familia")
                        .WithMany("EntregasFamilia")
                        .HasForeignKey("FamiliaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Inscricao", b =>
                {
                    b.HasOne("MVC_MBQ.Models.Evento", "Evento")
                        .WithMany("Inscricoes")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_MBQ.Models.Voluntario", "Voluntario")
                        .WithMany("Inscricoes")
                        .HasForeignKey("VoluntarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("MVC_MBQ.Models.MembroFamilia", b =>
                {
                    b.HasOne("MVC_MBQ.Models.Familia", "Familia")
                        .WithMany("MembrosFamilia")
                        .HasForeignKey("FamiliaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Produto", b =>
                {
                    b.HasOne("MVC_MBQ.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MVC_MBQ.Models.ProdutoDoado", b =>
                {
                    b.HasOne("MVC_MBQ.Models.Doacao", "Doacao")
                        .WithMany("ProdutosDoados")
                        .HasForeignKey("DoacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_MBQ.Models.Produto", "Produto")
                        .WithMany("ProdutosDoados")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doacao");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MVC_MBQ.Models.ProdutoEntregue", b =>
                {
                    b.HasOne("MVC_MBQ.Models.EntregaFamilia", "EntregaFamilia")
                        .WithMany("ProdutosEntregues")
                        .HasForeignKey("EntregaFamiliaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_MBQ.Models.Produto", "Produto")
                        .WithMany("ProdutosEntregues")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntregaFamilia");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Doacao", b =>
                {
                    b.Navigation("ProdutosDoados");
                });

            modelBuilder.Entity("MVC_MBQ.Models.EntregaFamilia", b =>
                {
                    b.Navigation("ProdutosEntregues");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Evento", b =>
                {
                    b.Navigation("Doacoes");

                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Familia", b =>
                {
                    b.Navigation("EntregasFamilia");

                    b.Navigation("MembrosFamilia");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Produto", b =>
                {
                    b.Navigation("ProdutosDoados");

                    b.Navigation("ProdutosEntregues");
                });

            modelBuilder.Entity("MVC_MBQ.Models.Voluntario", b =>
                {
                    b.Navigation("Doacoes");

                    b.Navigation("Inscricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
